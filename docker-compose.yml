version: "3.3"
services:
  mongo_db:
    image: mongo:4.0
    volumes:
      - mongo_db:/data/db
    networks:
      - prometheus
    restart: always
  prometheus:
    image: prom/prometheus:v2.25.0
    ports:
      - "9090:9090"
    volumes:
      - type: bind
        source: ./prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: bind
        source: ./prometheus/alert.rules.yml
        target: /etc/prometheus/alert.rules.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention=1d"
      - "--web.enable-lifecycle"
    networks:
      - prometheus
    restart: always
  mongo-exporter:
    # image: barmank32/mongodb_exporter:0.20.2
    image: fmet/mongodb_exporter:0.10.0
    command:
      - "--mongodb.uri=mongodb://mongo_db:27017"
    networks:
      - prometheus
    restart: always
  blackbox-exporter:
    image: prom/blackbox-exporter
    volumes:
      - type: bind
        source: ./blackbox-exporter/config.yml
        target: /etc/blackboxexporter/config.yml
    command:
      - "--config.file=/etc/blackboxexporter/config.yml"
    networks:
      - prometheus
    restart: always
  grafana:
    image: grafana/grafana:7.4.3
    ports:
      - 3000:3000
    user: "472:1"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - prometheus
    restart: always
  alertmanager:
    image: prom/alertmanager:v0.21.0
    ports:
      - 9093:9093
    volumes:
      - type: bind
        source: ./alertmanager/alertmanager.yml
        target: /etc/alertmanager/alertmanager.yml
    networks:
      - prometheus
    restart: always
  pushgateway:
    image: prom/pushgateway:v1.4.0
    ports:
      - 9091:9091
    networks:
      - prometheus
    restart: always
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro    
    networks:
      - prometheus
    restart: always
  pve-exporter:
    image: prompve/prometheus-pve-exporter
    volumes:
      - type: bind
        source: ./pve-exporter/pve.yml
        target: /etc/pve.yml
    networks:
      - prometheus
    restart: always
  alerta:
    image: alerta/alerta-web
    ports:
      - "8080:8080"
    depends_on:
      - mongo_db
    env_file:
     - ./alerta/.env
    networks:
      - prometheus
    restart: always

volumes:
  mongo_db:
  prometheus_data:
  grafana_data:

networks:
  prometheus:
    driver: bridge

